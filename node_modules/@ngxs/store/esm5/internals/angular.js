/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { getPlatform, COMPILER_OPTIONS } from '@angular/core';
import { memoize } from './memoize';
/**
 * @return {?}
 */
function _isAngularInTestMode() {
    /** @type {?} */
    var platformRef = getPlatform();
    if (!platformRef)
        return false;
    /** @type {?} */
    var compilerOptions = platformRef.injector.get(COMPILER_OPTIONS, null);
    if (!compilerOptions)
        return false;
    /** @type {?} */
    var isInTestMode = compilerOptions.some((/**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var providers = (item && item.providers) || [];
        return providers.some((/**
         * @param {?} provider
         * @return {?}
         */
        function (provider) {
            return ((provider && provider.provide && provider.provide.name === 'MockNgModuleResolver') ||
                false);
        }));
    }));
    return isInTestMode;
}
/** @type {?} */
export var isAngularInTestMode = memoize(_isAngularInTestMode);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlL2ludGVybmFscy8iLCJzb3VyY2VzIjpbImFuZ3VsYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQWdDLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7QUFFcEMsU0FBUyxvQkFBb0I7O1FBQ3JCLFdBQVcsR0FBdUIsV0FBVyxFQUFFO0lBQ3JELElBQUksQ0FBQyxXQUFXO1FBQUUsT0FBTyxLQUFLLENBQUM7O1FBQ3pCLGVBQWUsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBTSxnQkFBZ0IsRUFBRSxJQUFJLENBQUM7SUFDN0UsSUFBSSxDQUFDLGVBQWU7UUFBRSxPQUFPLEtBQUssQ0FBQzs7UUFDN0IsWUFBWSxHQUFHLGVBQWUsQ0FBQyxJQUFJOzs7O0lBQUMsVUFBQyxJQUFxQjs7WUFDeEQsU0FBUyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFO1FBQ2hELE9BQU8sU0FBUyxDQUFDLElBQUk7Ozs7UUFBQyxVQUFDLFFBQWE7WUFDbEMsT0FBTyxDQUNMLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxPQUFPLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssc0JBQXNCLENBQUM7Z0JBQ2xGLEtBQUssQ0FDTixDQUFDO1FBQ0osQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDLEVBQUM7SUFDRixPQUFPLFlBQVksQ0FBQztBQUN0QixDQUFDOztBQUVELE1BQU0sS0FBTyxtQkFBbUIsR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRQbGF0Zm9ybSwgQ09NUElMRVJfT1BUSU9OUywgQ29tcGlsZXJPcHRpb25zLCBQbGF0Zm9ybVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJy4vbWVtb2l6ZSc7XG5cbmZ1bmN0aW9uIF9pc0FuZ3VsYXJJblRlc3RNb2RlKCkge1xuICBjb25zdCBwbGF0Zm9ybVJlZjogUGxhdGZvcm1SZWYgfCBudWxsID0gZ2V0UGxhdGZvcm0oKTtcbiAgaWYgKCFwbGF0Zm9ybVJlZikgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBjb21waWxlck9wdGlvbnMgPSBwbGF0Zm9ybVJlZi5pbmplY3Rvci5nZXQ8YW55PihDT01QSUxFUl9PUFRJT05TLCBudWxsKTtcbiAgaWYgKCFjb21waWxlck9wdGlvbnMpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgaXNJblRlc3RNb2RlID0gY29tcGlsZXJPcHRpb25zLnNvbWUoKGl0ZW06IENvbXBpbGVyT3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHByb3ZpZGVycyA9IChpdGVtICYmIGl0ZW0ucHJvdmlkZXJzKSB8fCBbXTtcbiAgICByZXR1cm4gcHJvdmlkZXJzLnNvbWUoKHByb3ZpZGVyOiBhbnkpID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIChwcm92aWRlciAmJiBwcm92aWRlci5wcm92aWRlICYmIHByb3ZpZGVyLnByb3ZpZGUubmFtZSA9PT0gJ01vY2tOZ01vZHVsZVJlc29sdmVyJykgfHxcbiAgICAgICAgZmFsc2VcbiAgICAgICk7XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gaXNJblRlc3RNb2RlO1xufVxuXG5leHBvcnQgY29uc3QgaXNBbmd1bGFySW5UZXN0TW9kZSA9IG1lbW9pemUoX2lzQW5ndWxhckluVGVzdE1vZGUpO1xuIl19